syntax = "proto3";

package user.v1;

option go_package = "github.com/goIdioms/gRPC/api/proto/user/v1;userv1";

service UserService {
  rpc CreateUser(CreateUserRequest) returns (CreateUserResponse);
  rpc GetUser(GetUserRequest) returns (GetUserResponse);
  rpc UpdateUser(UpdateUserRequest) returns (UpdateUserResponse);
  rpc DeleteUser(DeleteUserRequest) returns (DeleteUserResponse);
  rpc SignIn(SignInRequest) returns (SignInResponse);
  rpc SignUp(SignUpRequest) returns (SignUpResponse);
  rpc SignOut(SignOutRequest) returns (SignOutResponse);
  rpc RefreshToken(RefreshTokenRequest) returns (RefreshTokenResponse);
  rpc StreamUsers(StreamUsersRequest) returns (stream StreamUsersResponse);
  rpc ListUsers(ListUsersRequest) returns (ListUsersResponse);
}

message User {
  string id = 1;
  string username = 2;
  string email = 3;
  string password = 4;
  string phone = 5;
  string avatar = 6;
  int64 created_at = 7;
}

message CreateUserRequest {
  string username = 1;
  string email = 2;
  string password = 3;
  string phone = 4;
}

message CreateUserResponse {
  User user = 1;
}

message GetUserRequest {
  string id = 1;
}

message GetUserResponse {
  User user = 1;
}

message UpdateUserRequest {
  string id = 1;
  string username = 2;
  string email = 3;
  string password = 4;
  string phone = 5;
}

message UpdateUserResponse {
  User user = 1;
}

message DeleteUserRequest {
  string id = 1;
}

message DeleteUserResponse {
  User user = 1;
}

message SignInRequest {
  string username = 1;
  string password = 2;
}

message SignInResponse {
  User user = 1;
}

message SignUpRequest {
  string username = 1;
  string email = 2;
  string password = 3;
  string phone = 4;
}

message SignUpResponse {
  User user = 1;
}

message SignOutRequest {
  string id = 1;
}

message SignOutResponse {
  User user = 1;
}

message RefreshTokenRequest {
  string id = 1;
}

message RefreshTokenResponse {
  User user = 1;
}

message StreamUsersRequest {
  int32 page = 1;
  int32 page_size = 2;
}

message StreamUsersResponse {
  repeated User users = 1;
  int32 total = 2;
}

message ListUsersRequest {
  int32 page = 1;
  int32 page_size = 2;
}

message ListUsersResponse {
  repeated User users = 1;
  int32 total = 2;
}
